<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="XWiki.JIRAPro.IssueCreate.JiraIssueCreationService" locale="">
  <web>XWiki.JIRAPro.IssueCreate</web>
  <name>JiraIssueCreationService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>JiraIssueCreationService</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
## Request action parameter:
##   * suggestInstance
##   * getAuthenticationActionRequiredUI
##   * suggestProject
##   * suggestIssueType
##   * suggestAssignableUser
##   * suggestUser
##   * getFieldsMetadata
##   * createIssue
#macro (suggestInstance)
  #set ($jsonData = $services.jiraIssueCreation.suggestInstance())
#end
#macro (getAuthenticationActionRequiredUI)
  #set ($macro.authenticator = $services.component.getInstance('org.xwiki.contrib.jira.config.JIRAConfiguration').jIRAServers[$request.instanceId].jiraAuthenticator.get())
  #if ($macro.authenticator.class.name == 'com.xwiki.jirapro.oauth.internal.JIRAOAuthAuthenticator')
    #set ($jsonData = $jsontool.serialize({"message": $services.rendering.render($macro.authenticator.getWarningMacroBlock(true, false, $doc.URL), $doc.syntax)}))
  #end
#end
#macro (suggestProject $text)
  #set ($jsonData = $services.jiraIssueCreation.suggestProject($request.instanceId, $text))
#end
#macro (suggestIssueType $project $text)
  #set ($jsonData = $services.jiraIssueCreation.suggestIssueType($request.instanceId, $project, $text))
#end
#macro (suggestAssignableUser $project $text)
  #set ($jsonData = $services.jiraIssueCreation.suggestAssignableUser($request.instanceId, $project, $text))
#end
#macro (suggestUser $project $text)
  #set ($jsonData = $services.jiraIssueCreation.suggestUser($request.instanceId, $text))
#end
#macro (getFieldsMetadata $project $issueType)
  #set ($jsonData = $services.jiraIssueCreation.getFieldsMetadata($request.instanceId, $project, $issueType))
#end
#macro (createIssue $inputData)
  #set ($jsonData = $services.jiraIssueCreation.createIssue($request.instanceId, $inputData))
#end
{{/velocity}}
{{velocity wiki="false"}}
#set ($text = "")
#if ($request.text)
  #set ($text = $request.text)
#end
#if ($request.action == 'suggestInstance')
  #suggestInstance($text)
#end
#if ($request.action == 'getAuthenticationActionRequiredUI')
  #getAuthenticationActionRequiredUI()
#end
#if ($request.action == 'suggestProject')
  #suggestProject($text)
#end
#if ($request.action == 'suggestIssueType')
  #suggestIssueType($request.project $text)
#end
#if ($request.action == 'suggestAssignableUser')
  #suggestAssignableUser($request.project $text)
#end
#if ($request.action == 'suggestUser')
  #suggestUser($text)
#end
#if ($request.action == 'getFieldsMetadata')
  #getFieldsMetadata($request.project $request.issueType)
#end
#if ($request.action == 'createIssue')
  #createIssue()
#end
#if ($jsonData)
  #set ($discard = $response.setContentType('application/json'))
  $jsonData
#end
{{/velocity}}</content>
</xwikidoc>
